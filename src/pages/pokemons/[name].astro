---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list-response"
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@componentes/pokemons/PokemonCard.astro";
import Title from "@componentes/shared/Title.astro";
import { Icon } from 'astro-icon/components';

export const getStaticPaths = (async() => {
    
    const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
    const { results } = await response.json() as PokemonListResponse;

    return results.map(({name, url}) => ({
        params: {
            name
        },
        props: {
            url
        }
    }));

    /* return [{
        params: {
            name: "charizard"
        }, 
        props: { url: "https://pokeapi.co/api/v2/pokemon/6/" }
    }]; */
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${ id }.ogg`;
const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout title=`Pokemon - #${id} ${name}` description={`Informacion sobre el pokemon ${name}`} image={imageUrl}>
    <section class="mt-10 mx-10 flex flex-col justify-center items-center">
        <div class="flex flex-row">
            <div>
                <!-- <a href="/">Regresar</a> -->
                 <button onclick="history.back()" class="text-blue-500">Regresar</button>
                <Title>{name}</Title>
            </div>
    
            <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
                <Icon data-outline name="heart-outline" size={ 50 }/>
                <Icon data-full class='hidden' name="heart-full" size={ 50 }/>
            </button>
        </div>

        <PokemonCard name={name} url={url} isBig/>

        <audio controls class="mt-5">
            <source src={audioSrc} type="audio/ogg" />
            Your browser does not support the audio element.
        </audio>
    </section>
</MainLayout>

<script>
    /* interface FavoritePokemon {
        name: string;
        id: number;
    } */

    import type { FavoritePokemon } from "@interfaces/favorite-pokemon";

    const handlePageLoad = () => {

        let favoritePokemons: FavoritePokemon[] = JSON.parse(localStorage.getItem('favorites') ?? '[]');

        const btnFavorite = document.getElementById("btn-favorite") as HTMLButtonElement;
        
        if (!btnFavorite) return;
        
        const name = btnFavorite.dataset.name ?? '';
        const id = btnFavorite.dataset.id ?? '';
        const isFavorite = favoritePokemons.some(pokemon => pokemon.name === name);

        const heartOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement;
        const heartFull = btnFavorite.querySelector('[data-full]') as HTMLElement;

        if (isFavorite) {
            heartOutline.classList.add('hidden');
            heartFull.classList.remove('hidden');
        }

        const toggleFavorite = () => {
            const isFavorite = favoritePokemons.some(pokemon => pokemon.name === name);

            if (isFavorite) {
                favoritePokemons = favoritePokemons.filter(pokemon => pokemon.id !== parseInt(id));
            } else {
                favoritePokemons.push({ name, id: +id });
            }

            localStorage.setItem('favorites', JSON.stringify(favoritePokemons));
        }

        btnFavorite.addEventListener('click', () => {

            heartOutline.classList.toggle('hidden');
            heartFull.classList.toggle('hidden');

            toggleFavorite();
            
        })
    }

    document.addEventListener('astro:page-load', handlePageLoad);

    
</script>

<style>
    a {
        @apply hover:underline text-blue-500;
    }

    #btn-favorite {
        @apply hover:animate-pulse;
    }
</style>

